Madder Hatter Web Dev Cheat Sheet

Build Enviornment:

OS: Arch
WM: Hyprland
TE: NeoVim

03/18/2024

Madd Status: Bite my shiny github class

Wiped my entire drive and rebuilt Hyprland on Arch last night...
Couldn't drag and drop files and folders to GitHub...
Installed a second file manager to test my problem...
Back on Hyprland without a filemanager installed...
I'll handle it all manually through the terminal...
Deleted my GitHub account...
Reading the (expletive deleted) manual...
I wrote this README to follow along with the manual...


Edit: This edit is testing the git diff command


# BTW I use Arch ;)
# git
# setup
Navigate to folder you want to version control
git config --global user.name "yourusernamehere"
git config --global user.email youremail@here.com
git config --global core.editor nvim
git config --global init.defaultBranch main
git init



install openssh
ssh-keygen -t ed25519 -C "youremail@address.com"
[Enter]
Enter a Password
ssh-agent
eval $(ssh-agent)
ssh-add ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pub

echo "# repositoryname" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:githubuser@repositoryname.git
git push -u origin main

# command
git add [file]
git commit -m 'Commit message here'
	--amend #add forgotten file

git reset HEAD [file]... to unstage
git checkout -- [file] !!Danger changes file in local directory
git restore [file] !!Danger Any local changes you made to that file are gone Git just replaced
		     that file with the last staged or committed version

git status
git diff
git rm [file] #removes file from git and working directory
git rm --cached [file] #removes file from git
git log
	-p, --stat, --pretty=[oneline],[short],[full],[fuller]
	--since=2.weeks, --author=,
	-S function_name

#If you want the default behavior of Git
git config --global.pull.rebase "false"

#If you want to rebase when pulling
git co9nfig --global pull.rebase "true"

git tag -l #lists tags
git tag -a v1.0 -m "my version 1.0"
git push origin v1.0 #share tags
git tag -d v1.0 #delete tags
git push origin --delete <tagname>

git checkout -b version2 v2.0.0

#ALIAS EXAMPLE

git config --global alias.youraliashere checkout #git config --global alias.co checkout           
